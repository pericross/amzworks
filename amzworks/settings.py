"""
Django settings for amzworks project.

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import users

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
from django.conf import settings

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'izhztngmn)s0!(dso5l=dcr6e!$yz9%v+_pg8+)$k%l0(^pz_9'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'polls.apps.PollsConfig',
    'django.contrib.admin',
    'django.contrib.auth',
#    'django.contrib.sites',
    'users',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'bootstrap4',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'amzworks.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'amzworks.wsgi.application'


REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_NUMBER': 10
}


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.sqlite3',
#        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#    }
#}
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'amzworks_db',
        'USER': 'amzworks_admin',
        'PASSWORD': 'Greenspan',
        'HOST': '47.98.235.247',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

#TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
#    os.path.join(BASE_DIR, "polls/static")
]

AUTH_USER_MODEL = 'users.User'
USERS_VERIFY_EMAIL = True
USERS_AUTO_LOGIN_ON_ACTIVATION = True

# Automatically create django superuser after syncdb, by default this option is enabled when settings.DEBUG = True.
USERS_CREATE_SUPERUSER = settings.DEBUG

USERS_SUPERUSER_EMAIL = '102393186@qq.com'
USERS_SUPERUSER_PASSWORD = 'Adela301'

# Prevent automated registration by spambots, by enabling a hidden (using css) honeypot field:
USERS_SPAM_PROTECTION = True

USERS_REGISTRATION_OPEN = True

# This is the number of days the users will have, to activate their accounts after registering:
USERS_EMAIL_CONFIRMATION_TIMEOUT_DAYS = 3

# Specifies minimum length for passwords:
USERS_PASSWORD_MIN_LENGTH = 5

# Specifies maximum length for passwords:
USERS_PASSWORD_MAX_LENGTH = None

# Optionally, the complexity validator, checks the password strength:
USERS_CHECK_PASSWORD_COMPLEXITY = True

# Specify number of characters within various sets that a password must contain:
USERS_PASSWORD_POLICY = {
        'UPPER': 1,       # Uppercase 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
        'LOWER': 0,       # Lowercase 'abcdefghijklmnopqrstuvwxyz'
        'DIGITS': 1,      # Digits '0123456789'
        'PUNCTUATION': 1  # Punctuation """!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~"""
}

# Allow/disallow registration using emails addresses from specific domains:
USERS_VALIDATE_EMAIL_DOMAIN = True
# List of disallowed domains:
USERS_EMAIL_DOMAINS_BLACKLIST = []

# White list domains
# For example, USERS_EMAIL_DOMAINS_WHITELIST = ['ljworld.com'] will only allow user registration with ljworld.com domains.
USERS_EMAIL_DOMAINS_WHITELIST = []

# REST_AUTH_SERIALIZERS = {'USER_DETAILS_SERIALIZER': 'drf.serializers.UserSerializer'}

LOGIN_URL = '/accounts/login/'
